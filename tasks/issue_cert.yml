- name: Define {{ cert_manager_cert.main_domain }} certificate file paths
  set_fact:
    cert_manager_cert_file: "{{ cert_manager_cert_dir }}/{{ cert_manager_cert.main_domain }}/cert"
    cert_manager_key_file: "{{ cert_manager_cert_dir }}/{{ cert_manager_cert.main_domain }}/key"
    cert_manager_ca_file: "{{ cert_manager_cert_dir }}/{{ cert_manager_cert.main_domain }}/ca"
    cert_manager_fullchain_file: "{{ cert_manager_cert_dir }}/{{ cert_manager_cert.main_domain }}/fullchain"

- name: Retrieve {{ cert_manager_cert.main_domain }} conf file information
  stat:
    path: "{{ cert_manager_client_dir }}/{{ cert_manager_cert.main_domain }}/{{ cert_manager_cert.main_domain }}.conf"
  become: true
  register: cert_manager_conf_file_stat_result

- name: Issue {{ cert_manager_cert.main_domain }} certificate
  command:
    cmd: >
      sudo -u {{ cert_manager_user|quote }} -E -H
      {{ cert_manager_client_dir|quote }}/acme.sh
      --log
      --issue
      --dns dns_{{ cert_manager_cert.dns_provider|quote }}
      {% for cert_manager_cert_domain in [cert_manager_cert.main_domain] + cert_manager_cert.alt_domains|default([]) %}
      --domain {{ cert_manager_cert_domain|quote }}
      {% if cert_manager_cert.verification_domain is defined %}
      --challenge-alias {{ cert_manager_cert_domain|replace('*.', '')|quote }}.{{ cert_manager_cert.verification_domain|quote }}
      {% endif %}
      {% endfor %}
    warn: false
  environment: "{{ cert_manager_cert.dns_credentials }}"
  become: true
  register: cert_manager_issue_cert_result
  no_log: true
  when: not cert_manager_conf_file_stat_result.stat.exists

- name: Install {{ cert_manager_cert.main_domain }} certificate  # noqa 503
  command:
    cmd: >
      sudo -u {{ cert_manager_user|quote }}
      {{ cert_manager_client_dir|quote }}/acme.sh
      --install-cert
      --domain {{ cert_manager_cert.main_domain|quote }}
      --cert-file {{ cert_manager_cert_file|quote }}
      --key-file {{ cert_manager_key_file|quote }}
      --ca-file {{ cert_manager_ca_file|quote }}
      --fullchain-file {{ cert_manager_fullchain_file|quote }}
    warn: false
  become: true
  when: cert_manager_issue_cert_result.changed

- name: Deploy {{ cert_manager_cert.main_domain }} certificate  # noqa 503
  command:
    cmd: >
      sudo -u {{ cert_manager_user|quote }} -E -H
      {{ cert_manager_client_dir|quote }}/acme.sh
      --deploy
      --deploy-hook ssh
      --domain {{ cert_manager_cert.main_domain }}
    warn: false
  environment:
    DEPLOY_SSH_USER: "{{ cert_manager_user }}"
    DEPLOY_SSH_CMD: ssh -p {{ ansible_port|default(22) }} -o StrictHostKeyChecking=accept-new -T
    DEPLOY_SSH_SERVER: "{{ cert_manager_secondary_hosts }}"
    DEPLOY_SSH_KEYFILE: "{{ cert_manager_key_file }}"
    DEPLOY_SSH_CERTFILE: "{{ cert_manager_cert_file }}"
    DEPLOY_SSH_CAFILE: "{{ cert_manager_ca_file }}"
    DEPLOY_SSH_FULLCHAIN: "{{ cert_manager_fullchain_file }}"
    DEPLOY_SSH_REMOTE_CMD: chmod o-rwx {{ cert_manager_key_file|quote }}
    DEPLOY_SSH_BACKUP: "no"
  become: true
  when:
    - cert_manager_issue_cert_result.changed or cert_manager_redeploy|default(false)
    - cert_manager_secondary_hosts|length > 0
