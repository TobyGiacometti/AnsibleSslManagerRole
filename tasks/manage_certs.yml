- name: Retrieve certificate main domains
  set_fact:
    cert_manager_cert_main_domains: "{{ cert_manager_certs|map(attribute='main_domain')|list }}"
  no_log: true
  run_once: true

- name: Ensure that certificate main domains are unique
  fail:
    msg: Certificate main domains must be unique
  run_once: true
  when: cert_manager_cert_main_domains|count != cert_manager_cert_main_domains|unique|count

- name: Retrieve certificate directories
  find:
    file_type: directory
    paths:
      - "{{ cert_manager_cert_dir }}"
  become: true
  register: cert_manager_cert_dir_find_result

- name: Retrieve issued certificates
  set_fact:
    cert_manager_issued_cert_main_domains: >
      {{
      cert_manager_cert_dir_find_result.files |
      map(attribute='path') |
      map('basename') |
      list
      }}

- name: Define certificates that need to be removed
  set_fact:
    cert_manager_certs: >
      {{
      cert_manager_certs +
      [{'main_domain': cert_manager_cert_main_domain, 'state': 'removed'}]
      }}
  loop: "{{ cert_manager_issued_cert_main_domains }}"
  loop_control:
    loop_var: cert_manager_cert_main_domain
  no_log: true
  when: cert_manager_cert_main_domain not in cert_manager_cert_main_domains

- name: Manage certificate directories
  file:
    state: "{% if cert_manager_cert.state is undefined or cert_manager_cert.state == 'issued' %}\
      directory\
      {% elif cert_manager_cert.state in ['revoked', 'removed'] %}\
      absent\
      {% endif %}"
    path: "{{ cert_manager_cert_dir }}/{{ cert_manager_cert.main_domain }}"
    group: "{{ cert_manager_user }}"
    mode: 0775
  become: true
  loop: "{{ cert_manager_certs }}"
  loop_control:
    loop_var: cert_manager_cert
  no_log: true

- name: Manage secondary host listing file
  template:
    src: secondary-hosts.j2
    dest: "{{ cert_manager_state_dir }}/secondary-hosts"
    mode: 0644
  become: true
  register: cert_manager_secondary_hosts_file_result
  when:
    - cert_manager_primary_host is defined
    - inventory_hostname == cert_manager_primary_host

- name: Manage certificate checksum files
  template:
    src: cert-cksum.j2
    dest: "{{ cert_manager_state_dir }}/{{ cert_manager_cert.main_domain }}-cksum"
    mode: 0600
  become: true
  register: cert_manager_cert_cksum_file_results
  loop: "{{ cert_manager_certs }}"
  loop_control:
    loop_var: cert_manager_cert
  no_log: true
  when:
    - cert_manager_primary_host is undefined or inventory_hostname == cert_manager_primary_host
    - cert_manager_cert.state is undefined or cert_manager_cert.state == 'issued'

- name: Include certificate removal tasks
  include_tasks: remove_cert.yml
  vars:
    cert_manager_cert_main_domain: "{{ cert_manager_cert.main_domain }}"
    cert_manager_revoke: "{{ cert_manager_cert.state == 'revoked' }}"
  loop: "{{ cert_manager_certs }}"
  loop_control:
    loop_var: cert_manager_cert
  no_log: true
  when:
    - cert_manager_primary_host is undefined or inventory_hostname == cert_manager_primary_host
    - cert_manager_cert.state is defined
    - cert_manager_cert.state in ['revoked', 'removed']

- name: Include certificate removal tasks
  include_tasks: remove_cert.yml
  vars:
    cert_manager_cert_main_domain: "{{ cert_manager_cert_cksum_file_result.dest[:-6]|basename }}"
  loop: "{{ cert_manager_cert_cksum_file_results.results }}"
  loop_control:
    loop_var: cert_manager_cert_cksum_file_result
  no_log: true
  when:
    - cert_manager_primary_host is undefined or inventory_hostname == cert_manager_primary_host
    - cert_manager_cert_cksum_file_result.changed
    - cert_manager_cert_cksum_file_result.dest[:-6]|basename in cert_manager_issued_cert_main_domains

- name: Include certificate issuance tasks
  include_tasks: issue_cert.yml
  vars:
    cert_manager_secondary_hosts: "{{ lookup('template', 'secondary-hosts.j2')|trim }}"
    cert_manager_redeploy: "{{ cert_manager_secondary_hosts_file_result.changed|default(false) }}"
  loop: "{{ cert_manager_certs }}"
  loop_control:
    loop_var: cert_manager_cert
  no_log: true
  when:
    - cert_manager_primary_host is undefined or inventory_hostname == cert_manager_primary_host
    - cert_manager_cert.state is undefined or cert_manager_cert.state == 'issued'
